name: Release

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on: 
  push:
    branches:
      - "main"

jobs:
  build:
    strategy:
      matrix:
        config:
          - name: üê• Linux AMD64
            os: linux
            arch: amd64
            runner: ubuntu-latest
          - name: üê• Linux ARM64
            os: linux
            arch: arm64
            runner: ubuntu-latest
          - name: üçé MacOS AMD64
            os: macos
            arch: amd64
            runner: macos-13
          - name: üçé MacOS ARM64
            os: macos
            arch: arm64
            runner: macos-14
          - name: üü¶ Windows AMD64
            os: windows
            arch: amd64
            runner: windows-latest
          - name: üü¶ Windows ARM64
            os: windows
            arch: arm64
            runner: windows-latest
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.runner }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-just
      - uses: ./.github/actions/setup-rust
      - uses: ./.github/actions/build-bin
        with: 
          os: "${{ matrix.config.os }}"
          arch: "${{ matrix.config.arch }}"
      - uses: actions/upload-artifact@v4
        with:
          name: rrm-${{ matrix.config.os }}-${{ matrix.config.arch }}
          path: ${{ github.workspace }}/artifacts/**/*
          if-no-files-found: error
          retention-days: 1

  publish-github-release:
    name: "üîÑ Publish Github Release"
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - name: Publish` Github Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ls -l .
          ls -l artifacts
          ls -l artifacts/rrm-linux-amd64

          exit 0
          TAG="$(date -u +"v%Y.%m.%d.%H%M").${GITHUB_SHA::4}"
          echo "Tag: ${TAG}"

          gh release create $TAG  --draft --notes "Automatically built binaries"
          
          gh release upload $TAG linux-amd64.tar.gz/linux-amd64.tar.gz
          gh release upload $TAG linux-arm64.tar.gz/linux-arm64.tar.gz
          gh release upload $TAG macos-amd64.tar.gz/macos-amd64.tar.gz
          gh release upload $TAG macos-arm64.tar.gz/macos-arm64.tar.gz
          gh release upload $TAG windows-amd64.tar.gz/windows-amd64.tar.gz
          gh release upload $TAG windows-arm64.tar.gz/windows-arm64.tar.gz
          
          gh release edit $TAG --draft=false
